(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{389:function(t,s,n){"use strict";n.r(s);var a=n(4),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"class组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class组件"}},[t._v("#")]),t._v(" class组件")]),t._v(" "),s("p",[t._v("1、使用class关键字创建的组件，内部出了有this.props这个只读属性之外，还有一个专门用于存放自己私有数据的this.state属性这个state是可读可写的\n2、使用class创建的组件叫做【有状态组件】；【有状态组件】有自己的生命周期函数\n3、应用场景：如果一个组件需要存放自己的私有数据，或者需要在组件的不同阶段执行不同的业务逻辑，此时非常适合【有状态组件】")]),t._v(" "),s("h2",{attrs:{id:"function创建的组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function创建的组件"}},[t._v("#")]),t._v(" function创建的组件")]),t._v(" "),s("p",[t._v("注意：\n1、使用function构造函数创建的组件，内部没有state私有的数据，只有一个props来接收外界传递过来的数据\n2、使用function创建的组件叫做【无状态组件】\n3、应用场景：如果一个组件只需要根据外界传递过来的props，渲染固定的页面结构，此时非常适用【无状态组件】\n4、优点：由于删除了组件的生命周期，所以运行速度会相当于快一点")]),t._v(" "),s("h2",{attrs:{id:"组件复合-composition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件复合-composition"}},[t._v("#")]),t._v(" 组件复合 Composition")]),t._v(" "),s("p",[t._v("在传统的HTML中，元素是构成页面的基础单位。而在React中，构建页面的基础单元是React组件。\n复合组件使我们以更敏捷的方式定义组件的外观和行为，比起继承的方式它更明确和安全")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onChanged")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("checked"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//子级")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h2",{attrs:{id:"purecomponent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#purecomponent"}},[t._v("#")]),t._v(" pureComponent")]),t._v(" "),s("blockquote",[s("p",[t._v("PureComponent自带通过props和state的浅对比来实现 shouldComponentUpate()，而Component没有。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);