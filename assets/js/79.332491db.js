(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{408:function(t,a,s){"use strict";s.r(a);var e=s(4),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("百度、阿里云、美团，一起来看看他们是怎么做的？")]),t._v(" "),a("p",[t._v("之所以选百度，是因为用户要快速搜索到自己想要的内容，这对性能要求非常高；阿里云呢，它的应用实时监控服务 ARMS 里，很重要的一个指标就是性能指标；美团的外卖到店，履约服务的体验和性能，对服务质量影响非常大。我从中选取他们各自重要的方面和你聊聊，希望对你有所启发。")]),t._v(" "),a("h2",{attrs:{id:"百度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#百度"}},[t._v("#")]),t._v(" 百度")]),t._v(" "),a("p",[t._v("首先，我们来了解下手百前端团队（百度 App 前端团队或手机百度前端团队的简称）。他们的性能优化整体思路是怎么样的呢？")]),t._v(" "),a("p",[t._v("手百前端团队一般先是根据 QA 的专项测试和用户反馈去发现问题（如落地页首屏加载慢），然后定义性能指标，客户端和前端将指标上报，接着使用天幕平台监控预警，分析代码寻求优化解决方案，完成后实施评估。")]),t._v(" "),a("p",[t._v("他们的性能指标主要以FCP、FMP 和卡顿率为主。")]),t._v(" "),a("p",[t._v("其中，FCP 是指 First Contentful Paint， 表示浏览器内核首次绘制来自 DOM 的内容（如文本图片），其意义近似于白屏时间，不过是偏向内容出现的时间，而白屏时间是偏向等待的时间。FCP 的侧重点在于第一个字符开始绘制的时刻。")]),t._v(" "),a("p",[t._v("卡顿率则是指请求中出现卡顿问题的占比。FMP 的定义和我们一样，我就不多解释了。")]),t._v(" "),a("p",[t._v("指标上报过程中， NA（Native App）和 H5 都通过各自的埋点 SDK 进行上报，天幕平台根据上报的数据指标，给出平均值、80分位值等，绘制性能报表。")]),t._v(" "),a("p",[t._v("然后是分析性能报表，他们找到指标不合理的地方，复现问题，进行优化。优化完成后，通过 AB 测试得出性能指标提升，评估体验提升。这样通过长期优化，渐渐达成秒开目标。")]),t._v(" "),a("p",[t._v("由于百度搜索前端团队的优化更多借助 NA 能力，对我们借鉴意义很大，在这里我就重点介绍一下。通过数据分析，手百前端团队性能问题主要集中在以下方面：")]),t._v(" "),a("p",[t._v("WebView 初始化耗时 500ms；")]),t._v(" "),a("p",[t._v("Hybrid 初始化大概 100ms，更多是指调起 App 时，Native 对协议中传入参数的解析及对模板头部和 body 的解析；")]),t._v(" "),a("p",[t._v("正文加载和渲染；")]),t._v(" "),a("p",[t._v("所以优化的思路大致是看WebView 初始化是否可以优化、串行逻辑是否可以并行、渲染速度是否可以提升。落地方案就是借助CloudHybrid和WebView 预创建。")]),t._v(" "),a("p",[t._v("具体来说，借助 CloudHybrid 方案，采用 SSR + 预加载 + 拦截请求的方式，可以简化页面渲染流程，提前化和并行化网络请求逻辑，进而提升 H5 首屏速度。而 WebView 预创建，就是为了减少 WebView 创建期间的耗时，我们在适当时机提前创建好它，放入缓存池，当页面需要展示内容时，从缓存池取出即可。")]),t._v(" "),a("p",[t._v("手百团队用了很多 Native 的能力，比如首屏统计、卡顿率统计等。好处显而易见，手百客户端内的 H5 页面不需要进行开发就可以全面接入覆盖；缺点是方案依托 NA，升级时需要客户端来发版，另外如果要分享到端外，由于需要 H5 形式承接，指标采集和优化就必须有一套对应的解决方案。")]),t._v(" "),a("p",[t._v("对此，他们依托于 San 技术栈来完成（类似 Vue 和 React 的 MVVM 框架），在 San 框架内部，采集性能指标，对 SSR 方案进行定制化优化。")]),t._v(" "),a("h2",{attrs:{id:"阿里云"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阿里云"}},[t._v("#")]),t._v(" 阿里云")]),t._v(" "),a("p",[t._v("阿里前端技术团队尤其是淘系，因为业务场景复杂，在性能方面有很深的造诣，秒开率指标就是这个团队最先提出的。")]),t._v(" "),a("p",[t._v("他们的整体性能优化思路及常规方案与百度非常类似，都是通过设定性能指标，搭建性能平台，针对监控平台上的数据诊断发现问题，优化完成后看业务数据变化。")]),t._v(" "),a("p",[t._v("由于阿里云的性能监控方案在体验指标方面非常有特色，业界很多业务都开始上云服务，所以这里我重点介绍一下阿里云的 ARMS 性能监控方案，另外再聊聊双十一场景下的优化。")]),t._v(" "),a("p",[t._v("那什么是 ARMS 性能监控方案？它是一种通过页面打开速度对 Web 场景进行监控，以此来提升站点性能体验的方案。很多阿里系业务都在使用这个方案对性能进行优化。")]),t._v(" "),a("p",[t._v("这个方案用的是什么性能指标呢？")]),t._v(" "),a("p",[t._v("ARMS 性能监控方案定义了一个性能指数Apdex，用来表示性能体验等级标准，其计算公式为Apdex=（满意数+可容忍数 / 2）/ 总样本量。Apdex 使用白屏时间作为计算指标，也就是T，默认取 2s。公式中满意数为 0～T，可容忍数为 T～4T，不满意为大于 4T。")]),t._v(" "),a("p",[t._v("这是一个总体的指标，除此之外，还有首屏时间、秒开率、白屏时间、可交互时间、domReady 时间、Load 时间等指标。除首屏时间和秒开率之外，都是通过根据 W3C 规范中定义的 Navigation Timing API 计算出来的。")]),t._v(" "),a("p",[t._v("由于首屏时间非常重要，我在这里就着重说一下在 ARMS 性能监控方案里，它的计算过程。")]),t._v(" "),a("p",[t._v("首先是通过 mutationObserver 监听页面元素的变化，然后遍历每次新增的元素，计算元素得分总和，如果元素可见得分为 1，反之得分为 0。")]),t._v(" "),a("p",[t._v("遍历过程采用的是深度优先遍历算法。如果子元素可见，则父元素可见，不用计算；如果最后一个元素可见，则之前兄弟元素可见，通过减少这些计算过程，来提升采集脚本的性能。")]),t._v(" "),a("p",[t._v("这是具体的实现方案，业务侧怎么接入使用呢？非常简单，ARMS 性能监控方案支持 CDN 接入、NPM 包接入两种方式。")]),t._v(" "),a("p",[t._v("CDN 接入，代码示例如下所示。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("uid")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该值用于区分用户的标识，根据业务设置。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pid")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("appType")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("imgUrl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://arms-retcode.aliyuncs.com/r.png?"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("uid")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxxx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertBefore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("firstChild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"crossorigin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://retcode.alicdn.com/retcode/bl.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__bl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("这里面主要是设置 uid 来区分不同的业务名称，然后将请求统一发送到服务端的地址"),a("code",[t._v("https://arms-retcode.aliyuncs.com/r.png?")]),t._v(" 。接着向括号中的地址请求采集脚本（"),a("code",[t._v("https://retcode.alicdn.com/retcode/bl.js")]),t._v("），并设置该请求支持 "),a("code",[t._v("crossorigin")]),t._v(" 跨域。这样如果加载过程中报错，可以通过阿里云的异常监控捕获到。\n使用 npm 包接入只需执行以下命令即可：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("npm install alife"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("logger "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("以上是有关 ARMS 性能监控方案的介绍，接下来我结合双十一会场项目，和你介绍下阿里云是如何进行性能优化的。")]),t._v(" "),a("p",[t._v("一般双十一会场项目的性能问题，主要集中在以下几个方面：")]),t._v(" "),a("p",[t._v("复杂网络环境下的问题，尤其是低端 Android 机环境下的问题；")]),t._v(" "),a("p",[t._v("拉新活动时，外部 H5（如投放在知乎、新浪微博的广告）调起淘宝 App 时需要初始化一些组件，从而导致页面体验相对于端内 H5 差的问题；")]),t._v(" "),a("p",[t._v("会场营销活动页面，因为二次访问率低，缓存数据过期导致的重复渲染和页面元素跳动问题。")]),t._v(" "),a("p",[t._v("针对上述问题，具体的优化方案，阿里主要利用数据预加载、缓存和 SSR 方案来解决。")]),t._v(" "),a("p",[t._v("其中阿里的 SSR 方案**，**较之于常规，具有低风险、低成本的特点。具体来说，阿里的 SSR 提供平滑的自动切换方案，在遇到问题时可以切换到 CSR 来实现低风险；通过提供统一的 Fass 服务，将前端、客户端和服务端能力结合在一起，可以方便低成本接入。")]),t._v(" "),a("p",[t._v("它是怎么做到的呢？")]),t._v(" "),a("p",[t._v("当页面需要 CSR 渲染时， 前端应用通过数据中的模块列表来加载模块并渲染，当页面需要 SSR 渲染时，前端应用使用 SSR 返回的 HTML 塞入 root container 中，然后根据模块列表加载模块最终的 Hydrate（注水，形象化描述将字符串数据变为可用的组件的过程）。这就是自动切换方案。")]),t._v(" "),a("p",[t._v("而统一的 Fass 服务是指 SSR 渲染后台服务，独立出的一个数据服务，在文档服务返回内容保持静态化不变的同时，根据页面提供的模块列表和模块所需数据，将内容动态加载并渲染成 HTML。")]),t._v(" "),a("p",[t._v("通过该方案，阿里可以将秒开率提高了一个新高度——82.6%，并且在业务指标方面（如 UV 点击率）也有不小的提升，最高达 5%。")]),t._v(" "),a("p",[t._v("阿里云因为要为海量用户提供服务，属于B 端产品，所以相关的性能统计方案很统一，实现起来简明扼要。双十一会场的优化，用的都是进阶的一些手段，因为业务体量大，一点体验上的改进，会带来业务收入上的较大收益。")]),t._v(" "),a("h2",{attrs:{id:"美团"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#美团"}},[t._v("#")]),t._v(" 美团")]),t._v(" "),a("p",[t._v("美团在前端性能优化方面，会对首屏时间、白屏时间、页面加载完成时间，以及流畅度进行检测，进而对白屏时间过长，首屏加载慢和交互体验不一致进行优化。性能平台上，他们也会给出一些分位值，如 TP50、TP90 和 TP99，对秒开率进行统计。")]),t._v(" "),a("p",[t._v("美团一般采用的是 Hybrid 开发模式，在这个模式下，美团大前端团队通过EnhanceHybrid（增强混合方案）方案、SSR 和离线化技术来进行性能优化。其中 EnhanceHybrid 是一大亮点，且对首屏时间贡献最大，具有零白屏时间的称号，我重点介绍一下它。")]),t._v(" "),a("p",[t._v("这是一个什么方案呢？")]),t._v(" "),a("p",[t._v("EnhanceHybrid 是一个视图切换的预加载方案。主要参考了苹果手机里的视图切换逻辑。当用户点击 A 的按钮进入 B 动作时，只有当 B 的动作完成之后，系统才会让 A 切换到 B，这样有效降低了白屏时间。就像你点击手机的设置按钮，当这个动作完成后，才会出现设置页面。")]),t._v(" "),a("p",[t._v("这个方案重点解决了三个问题：")]),t._v(" "),a("p",[t._v("无法在跳转 B 之前完成 B 的加载和渲染；")]),t._v(" "),a("p",[t._v("无法获取 B 的渲染进度；")]),t._v(" "),a("p",[t._v("A 等待时间长。")]),t._v(" "),a("p",[t._v("它是这么解决的呢？")]),t._v(" "),a("p",[t._v("当用户触发 A 视图到 B 视图的跳转操作后，系统会隐藏式地开启一个新的 Webview 网页视图，并展示加载等待动画，此时会展示 B 的加载和渲染进度（这个进度只能是模拟的估计）。当 B 视图加载完成，首屏内容渲染完成后，客户端通知网页视图，进行 A 视图的展示。此过程中 A 等待时间长的问题，可以通过离线化来解决。")]),t._v(" "),a("p",[t._v("这个方案的一个好处是，直接可以接入使用，不需要业务前端做什么。")]),t._v(" "),a("p",[t._v("小结\n好了，以上就是百度、阿里云、美团的性能优化方案，这里我们做一个对比。")]),t._v(" "),a("p",[t._v("性能优化本质还是为了解决业务的问题，手百属于超级 App，解决了它的性能问题，就解决了大多数场景下的性能问题，所以借助 Native 能力做重性能方案是值得的。")]),t._v(" "),a("p",[t._v("阿里云提供的服务旨在标准化，不能有太多个性化的统计方案，同时淘宝、天猫双十一会场遇到问题复杂度很高，我们场景的性能问题，他们都经历过。所以在性能指标采集和 SSR 方案实现方面要前沿一些。")]),t._v(" "),a("p",[t._v("美团立足 Hybrid 做了 EnhanceHybrid 方案，低成本、务实地解决了性能问题，挺符合这个公司的文化的。")]),t._v(" "),a("h2",{attrs:{id:"rn、flutter-和小程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rn、flutter-和小程序"}},[t._v("#")]),t._v(" RN、Flutter 和小程序")]),t._v(" "),a("p",[t._v("RN 即 ReactNative，是 Facebook 开发的开源移动应用架构，它可以让开发者基于 Javascript 和 React.js 开发跨平台移动应用。近一年 RN 非常火，其优势之一是多端开发，另一个最大特点就是渲染性能，我曾使用 RN 做了一个个人中心解决方案，首屏性能可以提升 50%。")]),t._v(" "),a("p",[t._v("Flutter 是一个由 Google 开发的开源移动方案，与 RN 类似，主要为 Android、IOS 系统开发应用。它的技术架构屏蔽了平台的概念，把多端优势在更底层解决掉了，同时渲染性能更好一点。")]),t._v(" "),a("p",[t._v("除此之外，Flutter 最大的优势在于提升了开发效率。我曾在实际项目中实验过，相对于 iOS 和 Android 两端开发，它可以降低 40% 的开发成本。")]),t._v(" "),a("p",[t._v("小程序则是一种不需要下载安装即可在微信平台上使用的程序，它主要为开发者在微信平台上提供服务。使用小程序进行优化时，不像 RN 和 Flutter 拥有良好的性能，需要我们额外做一些事情。下面我就一一为你详细介绍下。")]),t._v(" "),a("h3",{attrs:{id:"rn-原理及其性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rn-原理及其性能优化"}},[t._v("#")]),t._v(" RN 原理及其性能优化")]),t._v(" "),a("p",[t._v("一般在移动端开发中，我们会使用原生应用或者 H5，但它们都有不能忽视的缺点。如果使用原生开发的话，由于客户端发版和版本审核，迭代周期会比较长；而使用 H5 的话，它的性能体验又比较差，不如原生应用流畅。所以，为了解决这两个问题，RN 就出现了。")]),t._v(" "),a("p",[t._v("RN 会把应用的 JS 代码（包括依赖的 framework）编译成一个 buddle.js（如 iOS 下 index.ios.bundle.js），它整体框架的目的就是解释运行这个 js 文件。如果是 js 扩展的 API，则通过调用 bridge 方法来调用 native 方法。在这个框架下，上线周期和 Hybrid 类似，")]),t._v(" "),a("p",[t._v("但因为框架层负责跨平台的渲染，渲染效率比 Hybrid 好得多，前端开发者只需要关心如何编写 JS 代码即可。")]),t._v(" "),a("p",[t._v("目前的 RN 框架，是基于大量 JSON 消息序列化和反序列化来进行通信的。它的大致逻辑包括以下两段；")]),t._v(" "),a("p",[t._v("从 JS 到 Native 通信，即当 JS 调用 RN 控件时，JS 会把它需要调用的 NativeModule 函数和 NativeModule 对应的名称参数用 JSON 序列化后，传递给 Native，Native 接着会提取并调用对应的 NativeModule 的方法；")]),t._v(" "),a("p",[t._v("从 Native 返回向 JS 通信，Native 先通过 CreateInstance 将数据处理成 JSON，再传递给 JS ，JS 完成调用 JSModule，以实现 Native调用 JS 组件的能力。")]),t._v(" "),a("p",[t._v("在通讯过程中，如果出现调用延迟，会导致操作后没反应情况的发生。")]),t._v(" "),a("p",[t._v("这就需要通过周期性调用类似 ping 的方式来检测是否出现延迟。具体来说，在调用 ping 指令后对时间进行记录，如果时间超过某个阈值，就认为出现延迟了，阻塞延迟后，需要等待该进程结束，而非持续排队调用。")]),t._v(" "),a("p",[t._v("解决过程中，还需要注意两点：")]),t._v(" "),a("p",[t._v("原有 Hybrid 工程迁移到 RN 过程中，会发现很多新旧功能兼容问题，此时我们可以重新根据 RN 下的体验去设计页面功能，而不是盲目做功能拷贝；")]),t._v(" "),a("p",[t._v("提前做好 RN 基础建设，打包编译和热更新流程，尽量和 Hybrid 下的基建体系保持统一。")]),t._v(" "),a("h3",{attrs:{id:"flutter-及其性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flutter-及其性能优化"}},[t._v("#")]),t._v(" Flutter 及其性能优化")]),t._v(" "),a("p",[t._v("当我们使用 RN 开发移动端应用时，会因为要适配 Android 和 iOS 两端，导致代码复杂度特别高的情况。而使用 Flutter 可以避免这一情况。为什么呢？因为 Flutter 自带的渲染引擎和视图，可以帮我们完成组件层的闭环渲染，避免了像 RN 一样还要在组件层和渲染层分别实现。")]),t._v(" "),a("p",[t._v("请看下方 Flutter 架构实现图。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/performance/app-7.png",alt:"Flutter架构实现图。"}})]),t._v(" "),a("p",[t._v("Flutter 框架整体上使用 Dart 语言来实现，并且有着清晰的分层架构。这个分层架构除了让我们调用 Flutter 时更便捷之外，还可以分层调用甚至修改每次层的实现。")]),t._v(" "),a("p",[t._v("架构图中的 Foundation 层，提供了最基础的绘图、界面刷新，触屏等事件；Rendering 层由 Animation、Painting、Gestures 这几个子模块组成，它对外实现了完整的布局绘制功能，正是这一层让 RN 具备了跨平台渲染能力。")]),t._v(" "),a("p",[t._v("在它上一层是 Widgets ，它是开发者最常接触的一层，也是实现跨平台能力的一层，主要包括文本、图片、输入框动画等。在 Flutter 中，通过这一层可以组合嵌套不同的控件，可以构建出任意功能，任意复杂度的界面。")]),t._v(" "),a("p",[t._v("最上面的 Material + Cupertino 层提供了一系列控件（如 Material Design 和 iOS style 的控件），它主要用来保证两个平台（IOS 和 Android）上用户体验的一致性。")]),t._v(" "),a("p",[t._v("正是通过这一层层架构，Flutter 内部闭环实现了跨平台组件、渲染等流程。")]),t._v(" "),a("p",[t._v("那么，使用 Flutter ，前端的性能问题一般会出现在哪里呢？我们该如何进行优化？")]),t._v(" "),a("p",[t._v("用户在使用 Flutter 业务中，遇到的性能问题主要有两大类：")]),t._v(" "),a("p",[t._v("用户滑动操作不流畅，因为丢帧导致的卡顿；")]),t._v(" "),a("p",[t._v("操作流程被中断，陷入等待，也就是页面资源加载时间过长。")]),t._v(" "),a("p",[t._v("为了解决上述问题，我们选定页面滑动的流畅度（FPS）和页面加载耗时，作为性能指标。FPS指标的采集，一般借助 mChoreographer 和 CFRunLoop 来实现。但由于这两种方法都是在主线程上进行的，而 Flutter 的绘制是在 UI TaskRunner 中完成，在 GPU TaskRunner 中渲染，所以以往的 FPS 检测方法并不适用于Flutter。")]),t._v(" "),a("p",[t._v("Flutter 官方也提供了 Performane Overlay，缺点是无法提供在线监控的性能指标。最后我参考了业界，采用 handleBeginFrame和 handleDrawFrame 之间的时间间隔来计算帧率。前者用来启动一个新帧，后者用于帧的绘制。")]),t._v(" "),a("p",[t._v("具体是怎么做的呢？")]),t._v(" "),a("p",[t._v("第一步，在使用 App 进行交互操作，开始时计时，1s 内打印下开始时间 startTime，然后在handleBeginTime 方法回调时进行记录，再在 handleDrawFrame 方法回调时进行记录，结束计时打印下 endTime，将 endTime - startTime 存储数组 PerfArr 中。")]),t._v(" "),a("p",[t._v("第二步，计时达到 1s 后，计算刷新次数 PerfArr.length。PerfArr 中超过 16.6ms 的认为丢帧，如果连续 5 帧超过 50ms 则认为卡顿，单帧超过 250ms 则认为严重卡顿。")]),t._v(" "),a("p",[t._v("第三步，根据卡顿进行预警即可。")]),t._v(" "),a("h3",{attrs:{id:"小程序及其性能治理方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小程序及其性能治理方案"}},[t._v("#")]),t._v(" 小程序及其性能治理方案")]),t._v(" "),a("p",[t._v("我们在开发 Android 和 iOS App 时，H5 会出现白屏和页面切换不流畅的问题，与此同时，我们也希望 App 可以随时更新，而不需要上架审核。随着技术的发展，小程序作为替代方案就出现了。")]),t._v(" "),a("p",[t._v("小程序分为微信、支付宝、百度、头条系等多种，在这里我以微信小程序为例介绍下。微信小程序是怎么解决的呢？它主要通过设计一套自己的 Web + 离线包方案来实现，这样既能保证跨平台实时更新，还能保证性能体验。")]),t._v(" "),a("p",[t._v("同时，小程序还能禁掉一些不合适的标签（如外跳 URL 的 A 标签）和 API（如动态执行脚本的API），减少安全问题。此外它还能避免 JS 操作 DOM，从而提升渲染性能。")]),t._v(" "),a("p",[t._v("以下是小程序的架构设计：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/performance/app-8.png",alt:"小程序的架构设计"}})]),t._v(" "),a("p",[t._v("小程序的渲染层使用 WebView 进行渲染，开发者的 JS 逻辑运行在一个独立的 Jscore 线程中。")]),t._v(" "),a("p",[t._v("渲染层提供了带有数据绑定语法的 WXML，逻辑层提供了setData 等 API，开发者需要更新界面时，通过 setData 把变化的数据传递过去，小程序框架会根据 Dom Diff 的流程把正确的结果更新在 DOM 树上。")]),t._v(" "),a("p",[t._v("一般小程序的前端性能，我们主要关注首屏时间，也就是用户打开小程序到首屏加载完成的时长。")]),t._v(" "),a("p",[t._v("2016 年我在做微信支付项目时，收到用户反馈，主程序加载慢。当时我先做了首屏时间的采集，通过 setData 结束时间 - 路由开始时间获取到，发现首屏时间一度超过 5s。为了解决这个性能问题，我们开始结合业务场景和架构图进行了定位。")]),t._v(" "),a("p",[t._v("当时我们的小程序是放在微信支付的九宫格中的，大概有千万级的流量，公司很多业务都想使用这个流量，于是我们在小程序首页就增加了一个入口逻辑，随着业务增加，首页的代码量也越来越大。")]),t._v(" "),a("p",[t._v("再看小程序的架构图。我们可以知道，小程序启动时，也分为逻辑层的启动和视图层的启动，逻辑层的启动主要是加载 JS 代码，视图层则是启动 WebView 对页面进行加载和渲染。这也增加了时间。")]),t._v(" "),a("p",[t._v("经过这么一番分析，我们发现问题出在首页包过大上，它导致逻辑层加载过慢，首屏时间超标。")]),t._v(" "),a("p",[t._v("最后是怎么解决的呢？我的做法是先整理和清理包资源，比如把小 icon 都统一从网络加载的方案，无用资源及时清除；然后采用分包加载的机制减少首屏时间。")]),t._v(" "),a("p",[t._v("所谓分包加载，就是根据业务场景，将用户访问率高的页面放在主包里，将访问率低的页面放入子包里，按需加载。具体在这个项目中，我在主包只保留核心页面，如核心页面导航位及首页信息流等，其他内容（如积分种树功能、公益活动等）都放入子包中。启动时只加载主包，使用时再按需下载子包。这样主包从 1.2M 降低到 0.5M，首屏时间达到微信小程序下首屏时间标准的即 3s。")]),t._v(" "),a("p",[t._v("这里面的注意事项就是，要在项目方案设计时，就做好代码和资源目录文件的划分，主要功能所依赖的资源，要放在主包里，子包的拆分不需要太细。如果用户在点击到子包目录时，感觉有卡顿，可以做一些预加载处理。")]),t._v(" "),a("p",[t._v("小结\n好了，以上就是 RN、Flutter、小程序等的优化方案。在具体的实施过程中，我们遭遇了不少坑，最大的坑是 RN 方案接入期遇到的。我们在新技术生命周期的“早期采用者”阶段就已经介入了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/performance/app-9.png",alt:"小结"}})]),t._v(" "),a("p",[t._v("这个阶段 BAT 都没有大规模使用，出现问题后（如页面报错）需要去向 Facebook 开发同学提issue 去解决，往往解决一个问题就需要 2 周时间，业务往往等不及，严重影响了项目进入生产环境的进度。所以建议你以后在采用新技术方案时，尽量在上图的“早期大众”阶段再进入，这个时期很多常见的坑都蹚过了， Flutter 方案我们就是这么做的。")])])}),[],!1,null,null,null);a.default=r.exports}}]);