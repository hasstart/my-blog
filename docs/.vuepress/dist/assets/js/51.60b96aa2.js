(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{476:function(t,s,a){"use strict";a.r(s);var n=a(15),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"_01-v-if和v-for哪个优先级高"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01-v-if和v-for哪个优先级高"}},[t._v("#")]),t._v(" 01-v-if和v-for哪个优先级高")]),t._v(" "),a("ol",[a("li",[t._v("v-for优先于v-if被解析( 循环输出children, return 三元表达式)")]),t._v(" "),a("li",[t._v("同级时会先执行循环在判断条件,无论如何循环都不可避免,浪费了性能")]),t._v(" "),a("li",[t._v("要避免这种情况, 同级时对循环数组进行过滤,保证循环的数组都是需要展示的, 不同级时, v-if放之前")])]),t._v(" "),a("h3",{attrs:{id:"_02-vue组件data要函数形式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_02-vue组件data要函数形式"}},[t._v("#")]),t._v(" 02-vue组件data要函数形式")]),t._v(" "),a("p",[t._v("Vue组件可能存在多个实例,如果定义一个对象形式的data,则会造成他们共用同一个data对象,状态变化将会影响所有组件实例,采用函数形式则,每次执行函数都会返回全新的data对象实例,防止数据之前的污染.而Vue根实例只有一个,不要这种限制")]),t._v(" "),a("h3",{attrs:{id:"_03-key的作用和原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03-key的作用和原理"}},[t._v("#")]),t._v(" 03-key的作用和原理")]),t._v(" "),a("p",[t._v("A B C D E\nA B F C D E")]),t._v(" "),a("ol",[a("li",[t._v("不使用key则会遇见元素就进行更新, 更新三次 C D E 最后创建E 插入到最后")]),t._v(" "),a("li",[t._v("使用key之后先从 A B 然后 从 E D C 找到 F 差异 创建F插入到C之前")])]),t._v(" "),a("p",[t._v("作用:")]),t._v(" "),a("ol",[a("li",[t._v("key的作用主要是为了高效的更新虚拟DOM,在patch过程中通过key来判断两个节点是否相同,提高patch过程,减少DOM操作,提高性能")]),t._v(" "),a("li",[t._v("若不设置解key可能在列表更新时引发一些隐蔽的bug(按钮少一个)")]),t._v(" "),a("li",[t._v("Vue在使用相同标签名元素的过渡切换时,也会用到key,使Vue便于区分元素,从而触发过渡效果")])]),t._v(" "),a("h3",{attrs:{id:"_04-diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_04-diff"}},[t._v("#")]),t._v(" 04-diff")]),t._v(" "),a("p",[t._v("核心基于两个假设 1. 相同的组件产生相同的DOM结构,不同的组件产生不同的DOM结构,不同的组件产生不同的DOM结构,2 同一层级的一组节点,他们可以通过唯一的key进行区分\n策略: 深度优先 同级比较")]),t._v(" "),a("p",[t._v("先根据真实DOM生成一棵virtual DOM 当 virtual DOM 某个节点发生改变时生成一个Vnode,然后 Vnode与oldVnode进行对比,发现不一样的之低昂直接修改咋真是的DOM上,然后使oldVnode的值为Vnode, diff的过程是调用patch函数,一边比较一边给真实的DOM打补丁")]),t._v(" "),a("p",[t._v("当数据发生改变时, set会调用notify通知所有的Watcher, Watcher会调用patch给真实的DOM打补丁,更新相应的视图")]),t._v(" "),a("p",[t._v("patch :")]),t._v(" "),a("ol",[a("li",[t._v("先判断两个节点是否值得比较, 如果两个节点一样则深入检查他们的子节点,如不一样则用Vnode直接替换oldVnode\nsameVnode\n. key (key值)\n. tag (标签名)\n. isComment (是否为注释节点)\n. isDef(a.data) (是否都定义了data onclick style 标签上的属性)\n. sameInput(a, b) (当标签是input的时候，type必须相同)")]),t._v(" "),a("li",[t._v("如果值得比较则调用patchVnode方法\n· 找到对应的真是dom 成为el\n· 判断 Vnode 与 oldVnode是否指向同一个对象,如果是直接return\n· 如果他们的文本节点不相等 则将el的文本节点设置为Vnode的文本节点\n· 如果oldVnode有子节点,而Vnode没有 则删除el的子节点\n· 如果oldVnode没有子节点, 而Vnode有, 则将Vnode的子节点真实化添加到el\n· 如果都有子节点则执行updateChildren比较子节点")]),t._v(" "),a("li",[t._v("updateChildren\n· 将"),a("code",[t._v("Vnode")]),t._v("的子节点"),a("code",[t._v("Vchildren")]),t._v("和"),a("code",[t._v("oldVnode")]),t._v("的子节点"),a("code",[t._v("oldChildren")]),t._v("提取出来\n· "),a("code",[t._v("oldChildren")]),t._v("和"),a("code",[t._v("vChildren")]),t._v("各有两个头尾的变量"),a("code",[t._v("StartIdx")]),t._v("和"),a("code",[t._v("EndIdx")]),t._v("，它们的2个变量相互比较，一共有4种比较方式。如果4种比较都没匹配，如果设置了"),a("code",[t._v("key")]),t._v("，就会用"),a("code",[t._v("key")]),t._v("进行比较，在比较的过程中，变量会往中间靠，一旦"),a("code",[t._v("StartIdx>EndIdx")]),t._v("表明"),a("code",[t._v("oldChildren")]),t._v("和"),a("code",[t._v("vChildren")]),t._v("至少有一个已经遍历完了，就会结束比较。")])]),t._v(" "),a("p",[t._v("现在分别对"),a("code",[t._v("oldS")]),t._v("、"),a("code",[t._v("oldE")]),t._v("、"),a("code",[t._v("S")]),t._v("、"),a("code",[t._v("E")]),t._v("两两做"),a("code",[t._v("sameVnode")]),t._v("比较，有四种比较方式，当其中两个能匹配上那么真实"),a("code",[t._v("dom")]),t._v("中的相应节点会移到"),a("code",[t._v("Vnode")]),t._v("相应的位置，这句话有点绕，打个比方\n如果是"),a("code",[t._v("oldS")]),t._v("和"),a("code",[t._v("E")]),t._v("匹配上了，那么真实"),a("code",[t._v("dom")]),t._v("中的第一个节点会移到最后\n如果是"),a("code",[t._v("oldE")]),t._v("和"),a("code",[t._v("S")]),t._v("匹配上了，那么真实"),a("code",[t._v("dom")]),t._v("中的最后一个节点会移到最前，匹配上的两个指针向中间移动\n如果四种匹配没有一对是成功的，那么遍历"),a("code",[t._v("oldChild")]),t._v("，"),a("code",[t._v("S")]),t._v("挨个和他们匹配，匹配成功就在真实"),a("code",[t._v("dom")]),t._v("中将成功的节点移到最前面，如果依旧没有成功的，那么将"),a("code",[t._v("S")]),t._v("对应的节点插入到"),a("code",[t._v("dom")]),t._v("中对应的"),a("code",[t._v("oldS")]),t._v("位置，"),a("code",[t._v("oldS")]),t._v("和"),a("code",[t._v("S")]),t._v("指针向中间移动。")]),t._v(" "),a("h3",{attrs:{id:"_05-组件化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_05-组件化"}},[t._v("#")]),t._v(" 05-组件化")]),t._v(" "),a("p",[a("img",{attrs:{src:"/Vue/vue-components.png",alt:"组件"}}),t._v("\n组件是可复用的Vue实例,且带有一个名字.我们可以在一个通过new Vue创建的Vue根实例中,把这个组件作为自定义元素来使用.\n"),a("strong",[t._v("优点")]),t._v("组件化是Vue的精髓,VUe应用是由一个个组件构成,可以大大增加代码的复用性,可维护性和可测试性.")]),t._v(" "),a("p",[t._v("使用场景")]),t._v(" "),a("ul",[a("li",[t._v("通用组件: 实现基本功能,具有复用性,通用性. 例如按钮组件,输入框组件,布局组件 弹窗、级联、下拉菜单")]),t._v(" "),a("li",[t._v("业务组件: 完成具体业务,具有一定的复用性,例如登录组件,轮播图组件")]),t._v(" "),a("li",[t._v("页面组件: 组织应用各部分独立内容,需要时在不同页面组件之间切换, 例如列表页,详情页")])]),t._v(" "),a("h3",{attrs:{id:"_06-vue设计理念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_06-vue设计理念"}},[t._v("#")]),t._v(" 06-vue设计理念")]),t._v(" "),a("ul",[a("li",[t._v("数据驱动应用")]),t._v(" "),a("li",[t._v("mvvm模式践行者 mvvm 框架三要素 ( 响应式, 模板, 渲染 )\n"),a("img",{attrs:{src:"/Vue/mvvm.jpg",alt:"mvvm"}})]),t._v(" "),a("li",[t._v("从Model到view的映射(Data Binging)这样可以大量节省寻找DOM来进行View Updata的代码")]),t._v(" "),a("li",[t._v("从View到Model的事件监听(DOM Listenners), 这样Model会随着View触发事件而改变\n流程图展示如下\n"),a("img",{attrs:{src:"/Vue/vue-mvvm.jpg",alt:"mvvm"}}),t._v("\n组件更新的过程主要有两个阶段")]),t._v(" "),a("li",[t._v("比对(diff)")]),t._v(" "),a("li",[t._v("修改(diff的返回结果,输出生成的"),a("code",[t._v("patch")]),t._v("并操作)")])]),t._v(" "),a("p",[t._v("整个数据更新到页面视图更新的流程是, "),a("code",[t._v("Vue")]),t._v("里的"),a("code",[t._v("mountComponent")]),t._v("创建"),a("code",[t._v("Watcher")]),t._v(","),a("code",[t._v("Watcher")]),t._v("的"),a("code",[t._v("constructor")]),t._v("里调用"),a("code",[t._v("getter")]),t._v(",获取整个视图层直接关联的数据,从而触发属性的"),a("code",[t._v("getter")]),t._v("方法进行依赖收集.当监听数据的"),a("code",[t._v("setter")]),t._v("调用时触发"),a("code",[t._v("watcher.update")]),t._v(",而"),a("code",[t._v("updateComponent")]),t._v("即是"),a("code",[t._v("watcher")]),t._v("里作为回调的"),a("code",[t._v("getter")]),t._v("函数,从而在"),a("code",[t._v("updateComponent")]),t._v("中调用"),a("code",[t._v("_update")]),t._v(","),a("code",[t._v("_update")]),t._v("再调用"),a("code",[t._v("__patch__")]),t._v("方法批量派发更新内容,web端的"),a("code",[t._v("patch")]),t._v("方法对最终的dom节点进行更新.")]),t._v(" "),a("ol",[a("li",[t._v("渐进式JavaScript框架  vue全家桶需要就添加")]),t._v(" "),a("li",[t._v("易用性")]),t._v(" "),a("li",[t._v("高效性")]),t._v(" "),a("li",[t._v("灵活性")])]),t._v(" "),a("h3",{attrs:{id:"_07-vue要求组件模版只有一个根元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_07-vue要求组件模版只有一个根元素"}},[t._v("#")]),t._v(" 07-vue要求组件模版只有一个根元素")]),t._v(" "),a("p",[t._v("单文件下的根元素作为树状数据结构的根,进行diff的时候可以保证每个vNode的唯一性,提高渲染效率 便于vue管理")]),t._v(" "),a("h3",{attrs:{id:"_08-mvc、mvp和mvvm更多"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_08-mvc、mvp和mvvm更多"}},[t._v("#")]),t._v(" 08-MVC、MVP和MVVM更多")]),t._v(" "),a("p",[t._v("· MVC")]),t._v(" "),a("p",[t._v("MVC的全称是Model View Controller 是模型(model 数据保存 )-视图(view 用户界面)-控制器(controller 业务逻辑)的缩写")]),t._v(" "),a("p",[t._v("优点:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("耦合性低")])]),t._v(" "),a("li",[a("p",[t._v("重用性高")])]),t._v(" "),a("li",[a("p",[t._v("生命周期成本低")])]),t._v(" "),a("li",[a("p",[t._v("部署快")])]),t._v(" "),a("li",[a("p",[t._v("可维护性高")])]),t._v(" "),a("li",[a("p",[t._v("有利软件工程化管理")]),t._v(" "),a("p",[t._v("缺点:")])]),t._v(" "),a("li",[a("p",[t._v("没有明确的定义")])]),t._v(" "),a("li",[a("p",[t._v("不适合小型，中等规模的应用程序")])]),t._v(" "),a("li",[a("p",[t._v("增加系统结构和实现的复杂性")])]),t._v(" "),a("li",[a("p",[t._v("视图与控制器间的过于紧密的连接")])]),t._v(" "),a("li",[a("p",[t._v("视图对模型数据的低效率访问")])]),t._v(" "),a("li",[a("p",[t._v("一般高级的界面工具或构造器不支持模式")])])]),t._v(" "),a("p",[t._v("数据通讯方向")]),t._v(" "),a("p",[a("img",{attrs:{src:"/Vue/mvc-flowto.png",alt:"mvc通讯方向"}})]),t._v(" "),a("ul",[a("li",[t._v("用户可以向view发送指令(DOM事件), 再由view直接要求model改变状态")]),t._v(" "),a("li",[t._v("用户也可以直接向controller发送指令(改变URL触发hashChange事件),再由controller发送给view")]),t._v(" "),a("li",[t._v("controller非常薄,只是起到了路由的作用,而view非常厚,业务逻辑部署在view.ZW")])]),t._v(" "),a("p",[t._v("· MVP")]),t._v(" "),a("p",[t._v("MVC的全称是Model View Presenter")]),t._v(" "),a("p",[t._v("优点:")]),t._v(" "),a("ul",[a("li",[t._v("模型和视图完全分离,我们可以修改视图而不修改模型")]),t._v(" "),a("li",[t._v("可以更高效的使用模型,因为所有的交互都发生在Presenter内部")]),t._v(" "),a("li",[t._v("我们可以将Presenter用于多个视图,而不需要改变Presenter的逻辑")]),t._v(" "),a("li",[t._v("逻辑放在了Presenter中,可以脱离用户接口来进行单元测试")])]),t._v(" "),a("p",[t._v("缺点:")]),t._v(" "),a("ul",[a("li",[t._v("视图与Presenter交互过于频繁,一单视图需要变更Presenter也需要改变")])]),t._v(" "),a("p",[t._v("MVP与MVC的区别")]),t._v(" "),a("ul",[a("li",[t._v("在MVP中view并不直接使用model,他们之间通过Presenter来进行,所有的交互都发生在Presenter内保部,而在MVP中View会直接从Model中读取数据而不是通过Controller.")]),t._v(" "),a("li",[t._v("在MVC模型里面,Model不依赖于View,但是View是依赖于Model的.不仅如此,一些业务逻辑在View里面实现了,导致更改View比较困难,且无法复用")])]),t._v(" "),a("p",[t._v("数据通讯方向")]),t._v(" "),a("p",[a("img",{attrs:{src:"/Vue/mvp-flowto.png",alt:"mvp通讯方向"}})]),t._v(" "),a("ul",[a("li",[t._v("各部分通讯都是双向的")]),t._v(" "),a("li",[t._v("view和model不在发生联系,都通过presenter传递")]),t._v(" "),a("li",[t._v('View非常薄,不部署任何业务逻辑,成为"被动视图", 没有任何主动性,而Presenter非常厚,所有的逻辑都部署在那里.')])]),t._v(" "),a("p",[t._v("· MVVM")]),t._v(" "),a("p",[t._v("MVC的全称是Model View ViewModel")]),t._v(" "),a("p",[t._v("优点:")]),t._v(" "),a("ul",[a("li",[t._v("低耦合")]),t._v(" "),a("li",[t._v("可重用性")]),t._v(" "),a("li",[t._v("独立开发")]),t._v(" "),a("li",[t._v("可测试")])]),t._v(" "),a("p",[t._v("MVP与MVvm的区别")]),t._v(" "),a("ul",[a("li",[t._v("基本上与MVP模式完全一致，唯一的区别是，它采用双向绑定(data-binding): View的 变动，自动反映在View Model，反之亦然。")])]),t._v(" "),a("p",[t._v("数据通讯方向")]),t._v(" "),a("p",[a("img",{attrs:{src:"/Vue/mvvm-flowto.png",alt:"mvvm通讯方向"}})]),t._v(" "),a("ul",[a("li",[t._v("从Model到view的映射(Data Binging)这样可以大量节省寻找DOM来进行View Updata的代码")]),t._v(" "),a("li",[t._v("从View到Model的事件监听(DOM Listenners), 这样Model会随着View触发事件而改变")])]),t._v(" "),a("h3",{attrs:{id:"_09-vue组件之间的通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_09-vue组件之间的通信"}},[t._v("#")]),t._v(" 09-vue组件之间的通信")]),t._v(" "),a("p",[t._v("· 父组件向子组件传值")]),t._v(" "),a("ul",[a("li",[t._v("props")]),t._v(" "),a("li",[t._v("slot(插槽)")])]),t._v(" "),a("p",[t._v("· 子组件向父组件传值")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("子组件 $emit() 父组件 $on()")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("$once 此次监听只触发一次")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一次性将这个日期选择器附加到一个输入框上")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 它会被挂载到 DOM 上。")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("mounted")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pikaday 是一个第三方日期选择器的库")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("picker "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pikaday")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      field"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$refs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      format"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'YYYY-MM-DD'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在组件被销毁之前，")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也销毁这个日期选择器。")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("beforeDestroy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("picker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("destroy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变更为")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("mounted")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" picker "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pikaday")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      field"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$refs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      format"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'YYYY-MM-DD'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$once")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hook:beforeDestroy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      picker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("destroy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("$off 移除自定义监听器")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$off")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果没有参数则移除所有事件监听")]),t._v("\n  vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$off")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移除该事件的所有监听")]),t._v("\n  vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$off")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callbacl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只移除这个回调的监听器")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("ref")])])]),t._v(" "),a("p",[t._v("· 父子之间调用")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("$refs")]),t._v(" "),a("p",[t._v("ref被用来给元素或者子组件注册引用信息. 引用信息将会注册在父组件的$refs对象.如果在普通的DOM元素上使用,引用指向就是DOM元素:如果在子组件上使用,引用就指向组件")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'input'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$refs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[t._v("ref是作为渲染结果被创建的,在初始渲染时不能访问他们")]),t._v(" "),a("li",[t._v("$refs不是相应式的,不要视图用他在模板中做绑定数据")]),t._v(" "),a("li",[t._v("当V-for用于元素或者组件时,引用信息将是包含DOM节点或者组件实例的数组")])])]),t._v(" "),a("li",[a("p",[t._v("$root")]),t._v(" "),a("p",[t._v("每个 "),a("code",[t._v("new Vue()")]),t._v("实例的子组件中,其根实例可以通过"),a("code",[t._v("$root")]),t._v(" prototype进行访问")])]),t._v(" "),a("li",[a("p",[t._v("$parent")]),t._v(" "),a("p",[a("code",[t._v("$parent")]),t._v(" protorype可以用来从一个子组件访问父组件的实例. 他提供了一种机会,.可以在后期随时触达父级组件,以代替将数据以prop的方式传入子组件.")])]),t._v(" "),a("li",[a("p",[t._v("$children")]),t._v(" "),a("p",[a("code",[t._v("$children")]),t._v("当前实例的直接子组件, "),a("code",[t._v("$children")]),t._v("并不保证顺序,也不是相应式的.是一个数组,直接儿子的集合.里面有"),a("code",[t._v("_uid")]),t._v("可以进行区分")])])]),t._v(" "),a("p",[t._v("·  子子之间传值")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("放到父组件中")])]),t._v(" "),a("li",[a("p",[t._v("事件总线")]),t._v(" "),a("p",[t._v("在Vue的原型上添加一个Vue实例作为事件总线,实现组件之间的相互通讯.而且不受组件关系的影响.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$bus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'emitEvent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("params")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'emitEvent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])])]),t._v(" "),a("p",[t._v("· 跨层级传值")]),t._v(" "),a("ul",[a("li",[t._v("依赖注入 "),a("code",[t._v("provide/inject")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 祖先组件 不需要知道哪些后代组件使用它提供的 property")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("provide")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    parentName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后代组件 不需要知道被注入的 property 来自哪里")]),t._v("\ninject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'parentName'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("· 使用Vuex进行状态管理")]),t._v(" "),a("h3",{attrs:{id:"_10-vue优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-vue优化"}},[t._v("#")]),t._v(" 10-vue优化")]),t._v(" "),a("ol",[a("li",[t._v("路由懒加载")]),t._v(" "),a("li",[t._v("keep-alive缓存页面")]),t._v(" "),a("li",[t._v("v-show/v-if注意")]),t._v(" "),a("li",[t._v("v-if/v-for 避免同时使用")]),t._v(" "),a("li",[t._v("长列表冻结不添加响应式 object.freeze()")]),t._v(" "),a("li",[t._v("长列表虚拟滚动 react-window")]),t._v(" "),a("li",[t._v("事件销毁")]),t._v(" "),a("li",[t._v("图片懒加载 v-lazy")]),t._v(" "),a("li",[t._v("第三方插件按需引入")]),t._v(" "),a("li",[t._v("无状态组件标记为函数式组件")]),t._v(" "),a("li",[t._v("子组件分割")]),t._v(" "),a("li",[t._v("ssr")])]),t._v(" "),a("h3",{attrs:{id:"_11-vue3特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-vue3特性"}},[t._v("#")]),t._v(" 11-vue3特性")]),t._v(" "),a("ol",[a("li",[t._v("更快\n· 虚拟DOM的重写\n"),a("ul",[a("li",[t._v("组件快速路径+ 单个调用 + 子节点类型检测 "),a("code",[t._v("createdFragment")]),t._v(" "),a("code",[t._v("createdComponentVnode")]),t._v(" "),a("code",[t._v("createdElementVnode")])]),t._v(" "),a("li",[t._v("跳过不必要的条件分支")]),t._v(" "),a("li",[t._v("js引擎更容易优化\n· 优化slots的生成")]),t._v(" "),a("li",[t._v("可以单独重新渲染父级和子级")]),t._v(" "),a("li",[t._v("避免不必要的父子组件重新渲染\n· 静态树提升 "),a("code",[t._v("static")]),t._v(" "),a("ul",[a("li",[t._v("跳过修补整棵树,从而降低渲染成本")]),t._v(" "),a("li",[t._v("即使出现多次也能正常工作\n· 静态属性提升"),a("code",[t._v("static")])])])]),t._v(" "),a("li",[t._v("跳过这些属性不会改变节点\n· 基于proxy的响应式")]),t._v(" "),a("li",[t._v("使用proxy作为其观察机制")]),t._v(" "),a("li",[t._v("组件实例初始化速度提升100% 不用进行递归遍历")]),t._v(" "),a("li",[t._v("使用proxy 节省以前一半的内存开销,加快速度")]),t._v(" "),a("li",[t._v("为了兼容IE11 有一个兼容版本")])])]),t._v(" "),a("li",[t._v("更小 通过摇树优化核心库体积")]),t._v(" "),a("li",[t._v("更容易维护 typescript + 模块化\n"),a("ul",[a("li",[t._v("使用TypeScripr进行解耦 更加模块化")])])]),t._v(" "),a("li",[t._v("跨屏平台")]),t._v(" "),a("li",[t._v("更容易使用\n· 改进typpeScript支持,编辑器提供强有力的类型检查和错误及井道\n· 更高的调试支持\n· 独立的响应化模块\n· compositionApi\n"),a("ul",[a("li",[a("code",[t._v("setup(props,context){}")]),t._v(" 函数会在"),a("code",[t._v("beforeCreate")]),t._v("之后、"),a("code",[t._v("created")]),t._v("之前 接收外界传入的"),a("code",[t._v("props")]),t._v(",接受的组件必须"),a("code",[t._v("props")]),t._v("里需要声明否则拿不到传值.")]),t._v(" "),a("li",[a("code",[t._v("reactive()")]),t._v("函数接受一个普通对象,返回一个响应式的数据对象.想要使用必须先引入"),a("code",[t._v("reactive")]),t._v(",模板中想要使用该数据必须"),a("code",[t._v("return")]),t._v("出去,此函数只能在"),a("code",[t._v("setup")]),t._v("函数里使用.")]),t._v(" "),a("li",[a("code",[t._v("ref()")]),t._v("函数用来根据给定制创建一个响应式的数据对象,"),a("code",[t._v("ref()")]),t._v("函数调用的返回值是一个对象,")]),t._v(" "),a("li",[t._v("两者区别 "),a("code",[t._v("reactive")]),t._v("创建一个集合响应式数据,"),a("code",[t._v("ref")]),t._v("创建单一响应式数据.")]),t._v(" "),a("li",[a("code",[t._v("isRef()")]),t._v("用来判断某个值是否是"),a("code",[t._v("ref()")]),t._v("创建出来的,应用场景当展开某个可能为ref创建出来的值:")]),t._v(" "),a("li",[a("code",[t._v("toRef()")]),t._v("函数可以将"),a("code",[t._v("reactive()")]),t._v("创建出来的响应式对象,转换为普通的对象("),a("code",[t._v("reactive")]),t._v("创建之后的数据如果返回使用扩展运算符(...)，它创建的所有属性不再是响应式的.这是需要"),a("code",[t._v("toRefs")]),t._v("）")]),t._v(" "),a("li",[a("code",[t._v("computed()")]),t._v("用来创建计算属性,"),a("code",[t._v("computed()")]),t._v("函数的返回值是一个"),a("code",[t._v("ref")]),t._v("的实例")]),t._v(" "),a("li",[a("code",[t._v("watch()")]),t._v("函数用来监视某些数据项的变化,从而触发某些特定的操作.")]),t._v(" "),a("li",[t._v("在s"),a("code",[t._v("etup()")]),t._v("函数内创建"),a("code",[t._v("watch")]),t._v("监听,会在当前组件被销毁才会停止,如果想明确的停止某个监听,可以掉用"),a("code",[t._v("watch")]),t._v("的返回值即可. "),a("code",[t._v("const stop=watch(count,(newVal,oldVal)=>{})stop()")])]),t._v(" "),a("li",[a("code",[t._v("provide")]),t._v("和"),a("code",[t._v("inject")]),t._v("可以时间嵌套组件之间数据传递.这两个函数只能在setup中使用.父组件中使用"),a("code",[t._v("provide()")]),t._v("函数向下传递数据,子组件使用"),a("code",[t._v("inject()")]),t._v("获取上层传递来的数据")])])])]),t._v(" "),a("h3",{attrs:{id:"_13-watch和computed的区别及使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-watch和computed的区别及使用场景"}},[t._v("#")]),t._v(" 13-watch和computed的区别及使用场景")]),t._v(" "),a("ol",[a("li",[t._v("watch 一个值变化了,我要做很多事情,适用于一个值影响多个值, computed 一个值依赖于其他值,所依赖值发生变化,这个值也要跟着改变")]),t._v(" "),a("li",[t._v("watch 初次渲染的时候并不会执行, computed 具有缓存特性,依赖值未发生变化时,不会重复执行")]),t._v(" "),a("li",[t._v("watch 适合执行异步或者开销比较大的操作")])]),t._v(" "),a("h3",{attrs:{id:"_14-vue生命周期的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-vue生命周期的理解"}},[t._v("#")]),t._v(" 14-vue生命周期的理解")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lifecycle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化阶段")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件实例初始化之后,实例还未创建,数据观测,和event/watcher事件配置之前调用.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一般用于插件开发中执行一些初始化任务")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeCreate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件实例创建完毕,数据观测,property和方法的运算,watch/event事件回调已完成配置.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 各种省数据可以使用,常用于异步数据获取")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以下钩子在服务器端渲染期间不会被调用")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 未执行渲染,在挂载之前被调用:相关的render函数首次被调用,dom未创建")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeMounted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化结束,dom已创建.可以访问数据和dom元素,")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但不能保证所有的子组件一起被挂载,如果需等待整个视图都渲染完毕,可以在mounted内部使用 vm.$nextTick")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新阶段")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据更新时,虚拟DOM打补丁之前 可获取更新前的各种状态")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updated")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM组件已更新, 所有状态已是最新")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 销毁阶段")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bbeforeDestroy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例销毁前,实例仍完全可用,可用于一些定时器或者订阅的取消")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件销毁后,该钩子被调用之后,")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应的Vue实例的所有指令都被解绑,所有的事件监听器被移除,所有的子实例也都被销毁")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("detroyed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// keep-alive 特有周期")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("actived")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// keep-alive缓存组件被激活时使用")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deactived")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// kepp-alive缓存组件停用时使用")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.5.0+ 增加")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("errorCaptured")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 捕获一个来自子孙组件错误时被调用.此钩子会收到三个参数：错误对象、发生错误的组件实例以及一个包含错误来源信息的字符串。此钩子可以返回 false 以阻止该错误继续向上传播。")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 默认情况下,如果全局的config.errorHandler被定义,所有的错误仍会发送给他,因此这些错我仍然会单一的分析服务的地方进行汇报")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 若果一个组件的继承或者父级从属链路中存在多个errorHandler钩子.则他们将会被相同的错误唤起.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 如果此errorCaptured钩子自身抛出一个错误,则这个新错误和原本捕获都会发送给全局的config.errorHandler")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 一个errorCaptured钩子能够返回false以阻止错误继续向上传播,他会阻止其他任何被这个错误唤起的errorCaptured钩子和全局的config.errorHandler")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br")])]),a("h3",{attrs:{id:"_15-vuex使用及其理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-vuex使用及其理解"}},[t._v("#")]),t._v(" 15-vuex使用及其理解")]),t._v(" "),a("p",[t._v("Vuex是一个专为Vue.js应用程序开发的状态管理模式.它采用集中式存储管理应用的所有组件状态,并以相应的规则保证状态以一种可以预测的方式发生概念.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("state")]),t._v("，驱动应用的数据源；")]),t._v(" "),a("li",[a("code",[t._v("view")]),t._v("，以声明方式将 state 映射到视图；")]),t._v(" "),a("li",[a("code",[t._v("actions")]),t._v("，响应在 view 上的用户输入导致的状态变化。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/Vue/vue-vuex-flow.png",alt:"单向数据流"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"/Vue/vue-vuex.png",alt:"vue单向数据流"}})]),t._v(" "),a("p",[t._v("component dispatch => action commit => mutation  mutate => state  render => component")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vuex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("store")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  state 存放状态")]),t._v("\n    state"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//mutations state成员操作")]),t._v("\n    mutations"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getters 加工state成员给外界")]),t._v("\n    getters"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于直接在mutation方法中进行异步操作，将会引起数据失效。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以提供了Actions来专门进行异步操作，最终提交mutation方法。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this.$store.dispatch('aEdit',{age:15})")]),t._v("\n    actions"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 辅助函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mapState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mapGetters "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mapActions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vuex'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" defaulet "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   methods"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapActions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      add"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'increment'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 `this.add()` 映射为 `this.$store.dispatch('increment')`")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  computed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用对象展开运算符将此对象混入到外部对象中")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapGetters")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用对象展开运算符将 getter 混入 computed 对象中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'doneTodosCount'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'anotherGetter'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br")])]),a("h3",{attrs:{id:"_16-nexttick原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-nexttick原理"}},[t._v("#")]),t._v(" 16-nextTick原理")]),t._v(" "),a("p",[t._v("使用场景:\n在进行数据获取后,需要对新视图进行下一步操作,或者其他操作时,发现获取不到DOM\n原因:\nvue在观察到数据变化时并不是直接更新DOM,而是开启一个队列,并缓冲在同一个事件循环中发生的所有数据改变,\n在缓冲时会去除重复数据,从而避免不必要的计算和DOM操作\n然后,在下一个事件循环tick中,Vue刷新队列并执行实际工作.")]),t._v(" "),a("p",[t._v("使用顺序  Promise.then  > mutationObserver > setTimeout 目的是 延迟函数到 DOM 更新后再使用")]),t._v(" "),a("h3",{attrs:{id:"_17-v-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-v-model"}},[t._v("#")]),t._v(" 17- v-model")]),t._v(" "),a("p",[t._v("语法糖")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 通过v-on:input实现，修改数据影响模型中的数据，当input输入框发生变化，触发input事件 --\x3e")]),t._v("\n    input事件: "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("demoinput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("input")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("handle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("br")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_18-vue-router导航钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-vue-router导航钩子"}},[t._v("#")]),t._v(" 18-vue-router导航钩子")]),t._v(" "),a("ol",[a("li",[t._v("导航被触发。")]),t._v(" "),a("li",[t._v("在失活的组件里调用 "),a("code",[t._v("beforeRouteLeave")]),t._v(" 守卫。")]),t._v(" "),a("li",[t._v("调用全局的 "),a("code",[t._v("beforeEach")]),t._v(" 守卫。")]),t._v(" "),a("li",[t._v("在重用的组件里调用 "),a("code",[t._v("beforeRouteUpdate")]),t._v(" 守卫 (2.2+)。")]),t._v(" "),a("li",[t._v("在路由配置里调用 "),a("code",[t._v("beforeEnter")]),t._v("。")]),t._v(" "),a("li",[t._v("解析异步路由组件。")]),t._v(" "),a("li",[t._v("在被激活的组件里调用 "),a("code",[t._v("beforeRouteEnter")]),t._v("。")]),t._v(" "),a("li",[t._v("调用全局的 "),a("code",[t._v("beforeResolve")]),t._v(" 守卫 (2.5+)。")]),t._v(" "),a("li",[t._v("导航被确认。")]),t._v(" "),a("li",[t._v("调用全局的 "),a("code",[t._v("afterEach")]),t._v(" 钩子。")]),t._v(" "),a("li",[t._v("触发 DOM 更新。")]),t._v(" "),a("li",[t._v("调用 "),a("code",[t._v("beforeRouteEnter")]),t._v(" 守卫中传给 "),a("code",[t._v("next")]),t._v(" 的回调函数，创建好的组件实例会作为回调函数的参数传入。")])]),t._v(" "),a("h3",{attrs:{id:"_19-递归组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-递归组件"}},[t._v("#")]),t._v(" 19-递归组件")]),t._v(" "),a("p",[t._v("组件自身调用自身, 必须有结束条件")]),t._v(" "),a("h3",{attrs:{id:"_20-vue响应式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-vue响应式"}},[t._v("#")]),t._v(" 20-vue响应式")]),t._v(" "),a("p",[t._v("Vue 实现 双向数据绑定 主要采用：数据劫持结合“发布-订阅”模式的方式，通过Object.defineProperty（）的 set 和 get，在数据变动时发布消息给订阅者触发监听。")]),t._v(" "),a("p",[t._v("当你把一个普通的 "),a("code",[t._v("JavaScript")]),t._v(" 对象传入 Vue 实例作为 "),a("code",[t._v("data")]),t._v(" 选项，Vue 将遍历此对象所有的 "),a("code",[t._v("property")]),t._v("，并使用 "),a("code",[t._v("Object.defineProperty")]),t._v(" 把这些 "),a("code",[t._v("property")]),t._v(" 全部转为 "),a("code",[t._v("getter/setter")]),t._v("。每个组件实例都对应一个 "),a("code",[t._v("watcher")]),t._v(" 实例，它会在组件渲染的过程中把“接触”过的数据 "),a("code",[t._v("property")]),t._v(" 记录为依赖。之后当依赖项的 "),a("code",[t._v("setter")]),t._v(" 触发时，会通知 "),a("code",[t._v("watcher")]),t._v("，从而使它关联的组件重新渲染。")])])}),[],!1,null,null,null);s.default=e.exports}}]);